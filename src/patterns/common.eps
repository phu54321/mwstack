import patternbase;
import locSetting;
import location as loc;

function getNextGeneratedUnit() {
    var ptr, epd = dwepdread_epd(EPD(0x628438));
    if(ptr == 0) epd = 0;
    return epd;
}


function makeUnitStackable(epd) {
    dwwrite_epd(
        epd + (0xDC / 4),
        dwread_epd(epd + (0xDC / 4)) | 0x200000
        );
}

function createMissilePx(p: patternbase.Pattern, unit: TrgUnit, x, y) {
    loc.pxMoveLocationDot('pxmove', x, y);
    const epd = getNextGeneratedUnit();
    CreateUnit(1, unit, 'pxmove', p.forcePlayer);
    makeUnitStackable(epd);
}

function createVMissile(p: patternbase.Pattern, unit: TrgUnit, col) {
    const location = locSetting.vFromArray[col - 1];
    const epd = getNextGeneratedUnit();
    CreateUnit(1, unit, location, p.forcePlayer);
    makeUnitStackable(epd);
}

function createHMissile(p: patternbase.Pattern, unit: TrgUnit, row) {
    const location = locSetting.hFromArray[row - 1];
    const epd = getNextGeneratedUnit();
    CreateUnit(1, unit, location, p.forcePlayer);
    makeUnitStackable(epd);
}
