import location as loc;
import lifesys;

function isBuilderUnit(u: TrgUnit) {
    return (
        u == $U("Basic Builder") ||
        u == $U("Builder") ||
        u == $U("Ultimate Builder")
    ) ? 1 : 0;
}

function unitLoop() {
    foreach(ptr, epd : EUDLoopUnit()) {
        const unitType = dwread_epd(epd + (0x64 / 4));
        const player = dwbreak(dwread_epd(epd + 0x4C / 4))[[2]];
        const position = dwread_epd(epd + (0x28 / 4));
        const posX, posY = dwbreak(position)[[0, 1]];

        // Life system
        if(isBuilderUnit(unitType) && Accumulate(player, Exactly, 0, Gas)) {
            const opponentPlayer = ($P1 <= player && player <= $P3) ? $P8 : $P7;
            
            loc.pxMoveLocationDot('pxmove', posX, posY);
            MoveLocation('ptrace', 'Map Revealer', P12, 'pxmove');

            if(Bring(opponentPlayer, AtLeast, 1, '(men)', 'ptrace')) {
                KillUnitAt(All, '(any unit)', 'field', player);
                KillUnitAt(1, '(men)', 'ptrace', opponentPlayer);
                SetCurrentPlayer(player);
                DisplayText("\x16적의 미사일이 명중하였습니다.\r\n\r\n\x16부품이 수리될때까지 기다려주세요.");
                SetResources(player, SetTo, lifesys.reviveTime, Gas);
            }
        }
    }
}
